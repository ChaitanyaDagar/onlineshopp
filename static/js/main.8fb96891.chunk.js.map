{"version":3,"sources":["components/Login.js","components/Header.js","components/Nav.js","utils/config.js","components/Product.js","components/Products.js","containers/Shop.js","App.js","serviceWorker.js","index.js","utils/firebase-config.js"],"names":["Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","inherits","createClass","key","value","_this2","userid","refs","uid","pwd","firebase","ref","on","snapshot","val","setState","updateLoginStatus","_this3","userObject","set","then","data","catch","err","react_default","a","createElement","className","htmlFor","type","placeholder","onClick","doLogin","bind","add","doClear","React","Component","Header","Nav","classNameName","href","src","width","height","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","to","URLS","Product","style","item","url","name","price","Products","items","map","itemObeject","Product_Product","Shop","fetch","response","json","console","log","doAjax","Header_Header","Nav_Nav","Products_Products","App","islogin","loginState","arguments","length","undefined","Shop_Shop","Login_Login","isAuth","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fb96891.chunk.js","sourcesContent":["import React from 'react';\nimport * as firebase from 'firebase';\nexport class Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {msg:\"\"};\n\n    }\n    doLogin(){\n        var userid = this.refs.uid.value;\n        var pwd = this.refs.pwd.value;\n        var user = firebase.database().ref(\"users/\"+userid);\n        user.on('value',(snapshot)=>{\n            var userObject = snapshot.val();\n            if(userObject.pwd==pwd){\n                this.setState({msg:'welcome'+userid});\n                this.props.updateLoginStatus(true,userid);\n            }\n            else {\n                this.setState({\n                    msg:'invalid userid or password'\n                })\n                this.props.updateLoginStatus(false);\n            }\n        }\n        )\n       /* if(userid==pwd){\n            this.setState({msg:\"welcome\"+userid});\n            console.log(this.state);\n        this.props.updateLoginStatus(true, userid);\n        console.log(this.state);\n        }else{\n            this.setState({msg:\"invalid userid or password\"});\n            this.props.updateLoginStatus(false);\n        }*/\n\n        \n    }\n\n    doClear(){\n        this.refs.uid.value = \"\";\n        this.refs.pwd.value = \"\";\n        this.setState({msg:\"\"});\n    }\n\n    add(){\n        var userid = this.refs.uid.value;\n        var pwd = this.refs.pwd.value;\n        var userObject = {\"userid\":userid,\"pwd\":pwd}\n        var promise = firebase.database().ref(\"users/\"+userid).set(userObject);\n        promise.then(data=>{\n            this.setState({msg:\"user added \"})\n\n        }).catch(err=>{\n            this.setState({msg:\"error in user id\"})\n        })\n\n    }\n\n    \n    render(){\n        return (\n            <div>\n                <h2 className=\"alert-info\">Login Page</h2>\n                <h3 className=\"alert-success\">{this.state.msg}</h3>\n                <div className=\"form-group\">\n                <label htmlFor=\"\">User Id</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter your Username\" ref=\"uid\" />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"\">Password</label>\n                <input type=\"password\" className=\"form-control\" placeholder=\"Enter the password\" ref=\"pwd\" />\n                </div>\n                <div className=\"form-group\">\n                <button onClick={this.doLogin.bind(this)} className=\"btn btn-primary\" >Login</button>\n                &nbsp;\n                <button className=\"btn btn-success\" onClick={this.add.bind(this)}>Add</button>\n                <button onClick={this.doClear.bind(this)} className=\"btn btn-danger\">Clear</button>\n                </div>\n                \n\n            </div>\n        )\n\n    }\n}   ","import React from 'react';\nexport const Header = ()=>{\n    return(\n        <h1 className=\"alert-success\">Online Shop</h1>\n    );\n}\n","import React from 'react';\nexport const Nav = ()=>{\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n<a classNameName=\"navbar-brand\" href=\"#\">\n    <img src=\"https://www.svgimages.com/svg-image/s7/amazon-logo-256x256.png\" width=\"30\" height=\"30\" classNameName=\"d-inline-block align-top\" alt=\"\"/>\n    Shopping\n  </a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n      <a className=\"nav-link\" activeClassName=\"active\" to=\"/\">Items <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" to=\"/about\">AboutUs</a>\n      </li>\n      </ul>\n        </div>\n</nav>\n    )\n}","export const URLS= {\n    \"mobile\": \"https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master/mobiles.json\"\n}","import React from 'react'\nexport const Product = (props) =>{\n    const myStyle = {\n        width: '18rem'\n    }\n    return(\n        <div className=\"row\">\n           \n             <div className=\"col-sm-6\">\n             <div className=\"card\" style={myStyle}>\n  <img className=\"card-img-top\" src={props.item.url} alt=\"Card image cap\"/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{props.item.name}</h5>\n    <p className=\"card-text\">{props.item.price}</p>\n    <a href=\"#\" className=\"btn btn-primary\">Add to cart</a>\n  </div>\n</div>\n              </div>\n                  <div className=\"col-sm-6\">\n                    <h2>product details</h2>\n                 </div>\n    \n        \n        </div>\n    )\n}","import React from 'react'\nimport {Product} from './Product';\nexport const Products = (props) =>{\n    return(\n       props.items.map(itemObeject=><Product item={itemObeject}/>\n       )\n    )\n       }","import React from 'react';\nimport {Header} from '../components/Header';\nimport {Nav} from '../components/Nav';\nimport {URLS} from '../utils/config';\nimport {Products} from '../components/Products';\nexport class Shop extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            items:[]\n        }\n    }\n\n    doAjax(){\n        fetch(URLS.mobile).then(response=>{\n            response.json().then(data=>{\n              this.setState({items:data['mobiles']});\n              console.log(\"data is\",data['mobiles']);\n            }).catch(err=>{\n              this.setState({err:'error'});\n            })\n        }).catch(err=>{\n            this.setState({err:'error'});\n        \n        });\n    }\n    componentWillMount(){\n\n    }\n\n    componentDidMount(){\n        this.doAjax();\n\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Header/>\n                <Nav/>\n                <h3>Welcome {this.props.userid}</h3>\n                <Products items={this.state.items} />\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {Login} from './components/Login';\nimport {Shop} from './containers/Shop';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nexport default class App extends React.Component{\n  constructor(){\nsuper();\nthis.state = {islogin:false, userid: ''};\n  }\n  isAuth(loginState, uid=''){\n    this.setState({islogin:loginState, userid: uid});\n    console.log(this.state);\n  }\n render() {\n    return (\n      \n      <div className=\"container\">\n     { this.state.islogin?<Shop userid={this.state.userid} />:<Login updateLoginStatus={this.isAuth.bind(this)}/>}\n  \n      </div>  \n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nimport {config} from './utils/firebase-config';\n\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","  // Initialize Firebase\n  export const config = {\n    apiKey: \"AIzaSyAAV0KIB2B1Yr_7H2JUuTBid_bOjpJnJGc\",\n    authDomain: \"onlineshop-17e42.firebaseapp.com\",\n    databaseURL: \"https://onlineshop-17e42.firebaseio.com\",\n    projectId: \"onlineshop-17e42\",\n    storageBucket: \"onlineshop-17e42.appspot.com\",\n    messagingSenderId: \"165410473845\"\n  };\n  //firebase.initializeApp(config);\n"],"sourceRoot":""}